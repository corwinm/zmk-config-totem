//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        mod_tap: mod_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            flavor = "balanced";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
         &kp Q                &kp W             &kp E                 &kp R                  &kp T      &kp Y        &kp U                   &kp I                  &kp O             &kp P
         &mod_tap LEFT_ALT A  &mod_tap LCTRL S  &mod_tap LEFT_META D  &mod_tap LEFT_SHIFT F  &kp G      &kp H        &mod_tap RIGHT_SHIFT J  &mod_tap RIGHT_META K  &mod_tap RCTRL L  &mod_tap RIGHT_ALT SEMI
&kp TAB  &kp Z                &kp X             &kp C                 &kp V                  &kp B      &kp N        &kp M                   &kp COMMA              &kp DOT           &kp FSLH                 &kp APOS
                                                &mo 5                 &lt 4 BACKSPACE        &kp ESC    &lt 1 ENTER  &lt 2 SPACE             &lt 3 DEL
            >;
        };

        Symbols {
            bindings = <
        &kp LS(LBRC)   &kp LS(AMPS)  &kp LS(ASTRK)    &kp LS(LPAR)  &kp LS(RBRC)     &trans  &trans  &trans  &trans  &trans
        &kp LS(COLON)  &kp LS(DLLR)  &kp LS(PERCENT)  &kp CARET     &kp LS(PLUS)     &trans  &trans  &trans  &trans  &trans
&trans  &kp LS(TILDE)  &kp LS(EXCL)  &kp LS(AT)       &kp POUND     &kp LS(PIPE)     &trans  &trans  &trans  &trans  &trans  &trans
                                     &kp LS(LPAR)     &kp LS(RPAR)  &kp LS(UNDER)    &trans  &trans  &trans
            >;
        };

        Number {
            bindings = <
        &kp LBKT   &kp N7  &kp N8   &kp N9  &kp RBKT     &trans  &trans  &trans  &trans  &trans
        &kp SEMI   &kp N4  &kp N5   &kp N6  &kp EQUAL    &trans  &trans  &trans  &trans  &trans
&trans  &kp GRAVE  &kp N1  &kp N2   &kp N3  &kp BSLH     &trans  &trans  &trans  &trans  &trans  &trans
                           &kp DOT  &kp N0  &kp MINUS    &trans  &trans  &trans
            >;
        };

        Function {
            bindings = <
        &kp F12  &kp F7  &kp F8             &kp F9  &trans     &trans  &trans  &trans  &trans  &trans
        &kp F11  &kp F4  &kp F5             &kp F6  &trans     &trans  &trans  &trans  &trans  &trans
&trans  &kp F10  &kp F1  &kp F2             &kp F3  &trans     &trans  &trans  &trans  &trans  &trans  &trans
                         &kp K_APPLICATION  &trans  &kp TAB    &trans  &trans  &trans
            >;
        };

        Nav {
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &trans    &trans         &trans       &trans     &trans
        &trans  &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &trans  &trans
                        &trans  &trans  &trans    &kp RET   &kp BSPC       &kp BSPC
            >;
        };

        device {
            bindings = <
       &none       &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &none             &none    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
       &kp K_MUTE  &kp C_VOLUME_DOWN     &kp C_VOLUME_UP       &kp C_PLAY_PAUSE  &none    &none         &none         &none         &none         &none
&none  &none       &none                 &none                 &none             &none    &none         &none         &none         &none         &none         &bt BT_CLR
                                         &none                 &none             &none    &none         &none         &none
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        device {
            if-layers = <1 5>;
            then-layer = <5>;
        };
    };
};
